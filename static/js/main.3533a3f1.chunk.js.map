{"version":3,"sources":["components/Header.js","components/Selector.js","components/News.js","components/Display.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","style","color","width","Component","Selector","state","entered","_this2","this","getData","props","onSubmit","e","preventDefault","toLowerCase","setState","aria-label","aria-describedby","type","placeholder","value","onChange","target","onClick","News","_this$props$story","story","source","author","title","url","urlToImage","src","href","id","Display","stock","openColor","news","name","symbol","axios","get","concat","then","res","data","openLabel","articles","price","price_open","catch","Selector_Selector","bind","fontSize","map","News_News","App","Header_Header","Display_Display","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3533a3f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import Selector from \"./Selector\";\n\nexport default class Header extends Component {\n  render() {\n    // const { setSymbol, symbol } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <h1\n          className=\"display-4 text-center\"\n          style={{ color: \"white\", width: \"100%\" }}\n        >\n          Stocks & News\n        </h1>\n        {/* <Selector setSymbol={setSymbol} symbol={symbol} /> */}\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Selector extends Component {\n  state = {\n    entered: \"\"\n  };\n\n  render() {\n    const { getData } = this.props;\n    return (\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          getData(this.state.entered.toLowerCase());\n          this.setState({\n            entered: \"\"\n          });\n        }}\n      >\n        <div className=\"input-group mb-3\">\n          <input\n            className=\"form-control\"\n            aria-label=\"stock-symbol\"\n            aria-describedby=\"enter-stock-symbol\"\n            type=\"text\"\n            placeholder=\"Enter a Symbol\"\n            value={this.state.entered}\n            onChange={e => {\n              this.setState({\n                entered: e.target.value\n              });\n            }}\n          />\n          <div className=\"input-group-append\" />\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              getData(this.state.entered.toLowerCase());\n              this.setState({\n                entered: \"\"\n              });\n            }}\n          >\n            ENTER\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class News extends Component {\n  render() {\n    const { source, author, title, url, urlToImage } = this.props.story;\n    return (\n      <div>\n        <img className=\"story-image\" src={urlToImage} />\n        <a href={url} target=\"_blank\">\n          <h4>{title}</h4>\n        </a>\n        <p>Author: {author}</p>\n        {source.id && <p>Source: {source.id}</p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Selector from \"./Selector\";\nimport News from \"./News\";\nimport axios from \"axios\";\n\nexport default class Display extends Component {\n  state = {\n    stock: \"\",\n    color: \"\",\n    openColor: \"\",\n    news: \"\"\n  };\n\n  componentDidMount() {\n    this.setState({ stock: { name: \"Enter a Ticker Symbol Above\" } });\n  }\n\n  getData(symbol) {\n    axios\n      .get(\n        `https://api.worldtradingdata.com/api/v1/stock?symbol=${symbol}&api_token=uO7WwIJwLtXBWj1Jt3iRAFGfXVxHTKVCcsvoMRfQVtMbOJ79X2AZ74zUM5Wf`\n      )\n      .then(res => {\n        this.setState({ stock: res.data.data[0], openLabel: \"Open:\" });\n        return axios.get(\n          `https://newsapi.org/v2/everything?q=${\n            this.state.stock.name\n          }&apiKey=233e1387d9d94f85bfcdb577165f851a`\n        );\n      })\n      .then(res => {\n        this.setState({ news: res.data.articles });\n        if (this.state.stock.price > this.state.stock.price_open) {\n          this.setState({ color: \"green\", openColor: \"red\" });\n        }\n\n        if (this.state.stock.price < this.state.stock.price_open) {\n          this.setState({ color: \"red\", openColor: \"green\" });\n        }\n\n        if (this.state.stock.price === this.state.stock.price_open) {\n          this.setState({ color: \"black\", openColor: \"black\" });\n        }\n      })\n      .catch(() =>\n        this.setState({\n          stock: {\n            symbol: `Sorry no results found for ${symbol}!`\n          },\n          news: \"\"\n        })\n      );\n  }\n\n  render() {\n    return (\n      <div>\n        <Selector getData={this.getData.bind(this)} />\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <p className=\"text-center display-4\">{this.state.stock.symbol}</p>\n            <p className=\"text-center display-4\">{this.state.stock.name}</p>\n            <p\n              className=\"text-center display-2\"\n              style={{ color: this.state.color }}\n            >\n              {this.state.stock.price}\n            </p>\n            <p\n              className=\"text-center display-5\"\n              style={{ color: this.state.openColor }}\n            >\n              {this.state.stock.price_open && (\n                <span className=\"text-primary\">Open: </span>\n              )}\n              {this.state.stock.price_open}\n            </p>\n          </div>\n          <p className=\"text-center\" style={{ fontSize: \"12px\" }}>\n            Market data provided by{\" \"}\n            <a\n              target=\"_blank\"\n              href=\"https://www.worldtradingdata.com/documentation#introduction\"\n            >\n              World Trading Data\n            </a>\n            .\n          </p>\n        </div>\n\n        {this.state.news && (\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div>\n                {this.state.news.map(story => {\n                  return <News story={story} />;\n                })}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Display from \"./components/Display\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Display />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}